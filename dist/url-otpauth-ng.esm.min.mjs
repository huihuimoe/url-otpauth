const t="undefined"!=typeof URL?URL:require("url").URL,e={INVALID_ISSUER:0,INVALID_LABEL:1,INVALID_PROTOCOL:2,MISSING_ACCOUNT_NAME:3,MISSING_COUNTER:4,MISSING_ISSUER:5,MISSING_SECRET_KEY:6,UNKNOWN_OTP:7,INVALID_DIGITS:8,UNKNOWN_ALGORITHM:9};function o(t){this.name="OtpauthInvalidURL",this.message="Given otpauth:// URL is invalid. (Error "+t+")",this.errorType=t}o.prototype=new Error,o.prototype.constructor=o;const n=[6,8],r=["SHA1","SHA256","SHA512","MD5"];function i(i){const I={};let s;try{s=new t(i)}catch(t){throw t instanceof TypeError?new o(e.INVALID_PROTOCOL):t}if("otpauth:"!==s.protocol)throw new o(e.INVALID_PROTOCOL);s.protocol="http",s=new t(s);const h=decodeURIComponent(s.host);if("hotp"!==h&&"totp"!==h)throw new o(e.UNKNOWN_OTP);I.type=h;const N=s.pathname.substring(1),p=N.split(~N.indexOf(":")?":":"%3A");let a="",S="";if(1===p.length)S=decodeURIComponent(p[0]);else{if(2!==p.length)throw new o(e.INVALID_LABEL);a=decodeURIComponent(p[0]),S=decodeURIComponent(p[1])}if(S.length<1)throw new o(e.MISSING_ACCOUNT_NAME);if(2===p.length&&a.length<1)throw new o(e.INVALID_ISSUER);I.account=S;const c=s.searchParams;if(!c.has("secret"))throw new o(e.MISSING_SECRET_KEY);if(I.key=c.get("secret"),c.has("issuer")&&a&&c.get("issuer")!==a)throw new o(e.INVALID_ISSUER);if(I.issuer=a||c.get("issuer")||"",I.digits=6,c.has("digits")){const t=parseInt(c.get("digits"),10);if(-1==n.indexOf(t))throw new o(e.INVALID_DIGITS);I.digits=t}if(c.has("algorithm")){if(-1==r.indexOf(c.get("algorithm")))throw new o(e.UNKNOWN_ALGORITHM);I.algorithm=c.get("algorithm")}if("totp"===h&&c.has("period")&&(I.period=parseFloat(c.get("period"))),"hotp"===h){if(!c.has("counter"))throw new o(e.MISSING_COUNTER);I.counter=parseInt(c.get("counter"),10)}return I}export{e as ErrorType,o as OtpauthInvalidURL,i as parse};
//# sourceMappingURL=url-otpauth-ng.esm.min.mjs.map
